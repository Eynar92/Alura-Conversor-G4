/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package window;

import convert.TemperatureConvert;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author eynar
 */
class Temperature<T> {

    private T celsius;
    private T fahrenheit;
    private T kelvin;
    private T rankine;

    public T getCelsius() {
        return celsius;
    }

    public void setCelsius(T celsius) {
        this.celsius = celsius;
    }

    public T getFahrenheit() {
        return fahrenheit;
    }

    public void setFahrenheit(T fahrenheit) {
        this.fahrenheit = fahrenheit;
    }

    public T getKelvin() {
        return kelvin;
    }

    public void setKelvin(T kelvin) {
        this.kelvin = kelvin;
    }

    public T getRankine() {
        return rankine;
    }

    public void setRankine(T rankine) {
        this.rankine = rankine;
    }
}

public class TemperatureWindow extends javax.swing.JFrame {

    DecimalFormat decimalFormat = new DecimalFormat("#.##");
    private Temperature<Double> temperature;

    /**
     * Creates new form currencyWindow
     */
    public TemperatureWindow() {
        initComponents();
        setSize(450, 300);
        setLocationRelativeTo(null);
        temperature = new Temperature<>();

        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                confirmExit();
            }
        });
    }

    private void confirmExit() {
        int option = JOptionPane.showOptionDialog(this, "¿Está seguro que desea cerrar el programa?", "Confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new String[]{"Sí", "No"}, "No");
        if (option == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        TemperatureTitle = new javax.swing.JLabel();
        labelCelsius = new javax.swing.JLabel();
        labelFahrenheit = new javax.swing.JLabel();
        fieldCelsius = new javax.swing.JTextField();
        fieldFahrenheit = new javax.swing.JTextField();
        labelKelvin = new javax.swing.JLabel();
        labelRankine = new javax.swing.JLabel();
        fieldKelvin = new javax.swing.JTextField();
        fieldRankine = new javax.swing.JTextField();
        buttonBack = new javax.swing.JButton();
        MenuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        MainMenu = new javax.swing.JMenuItem();
        CurrencyConverter = new javax.swing.JMenuItem();
        TemperatureConverter = new javax.swing.JMenuItem();
        separator = new javax.swing.JPopupMenu.Separator();
        exitOption = new javax.swing.JMenuItem();
        HelpMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(15, 69, 113));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        TemperatureTitle.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        TemperatureTitle.setForeground(new java.awt.Color(255, 255, 255));
        TemperatureTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TemperatureTitle.setText("Conversor de Temperatura");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(TemperatureTitle, gridBagConstraints);

        labelCelsius.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        labelCelsius.setForeground(new java.awt.Color(204, 204, 204));
        labelCelsius.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelCelsius.setText("Celsius");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        jPanel1.add(labelCelsius, gridBagConstraints);

        labelFahrenheit.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        labelFahrenheit.setForeground(new java.awt.Color(204, 204, 204));
        labelFahrenheit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelFahrenheit.setText("Fahrenheit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        jPanel1.add(labelFahrenheit, gridBagConstraints);

        fieldCelsius.setBackground(new java.awt.Color(58, 49, 50));
        fieldCelsius.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        fieldCelsius.setForeground(new java.awt.Color(255, 255, 255));
        fieldCelsius.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldCelsius.setCaretColor(new java.awt.Color(255, 255, 255));
        fieldCelsius.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldCelsiusKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(fieldCelsius, gridBagConstraints);

        fieldFahrenheit.setBackground(new java.awt.Color(58, 49, 50));
        fieldFahrenheit.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        fieldFahrenheit.setForeground(new java.awt.Color(255, 255, 255));
        fieldFahrenheit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldFahrenheit.setCaretColor(new java.awt.Color(255, 255, 255));
        fieldFahrenheit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldFahrenheitKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(fieldFahrenheit, gridBagConstraints);

        labelKelvin.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        labelKelvin.setForeground(new java.awt.Color(204, 204, 204));
        labelKelvin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelKelvin.setText("Kelvin");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        jPanel1.add(labelKelvin, gridBagConstraints);

        labelRankine.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        labelRankine.setForeground(new java.awt.Color(204, 204, 204));
        labelRankine.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelRankine.setText("Rankine");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        jPanel1.add(labelRankine, gridBagConstraints);

        fieldKelvin.setBackground(new java.awt.Color(58, 49, 50));
        fieldKelvin.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        fieldKelvin.setForeground(new java.awt.Color(255, 255, 255));
        fieldKelvin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldKelvin.setCaretColor(new java.awt.Color(255, 255, 255));
        fieldKelvin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldKelvinKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(fieldKelvin, gridBagConstraints);

        fieldRankine.setBackground(new java.awt.Color(58, 49, 50));
        fieldRankine.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        fieldRankine.setForeground(new java.awt.Color(255, 255, 255));
        fieldRankine.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldRankine.setCaretColor(new java.awt.Color(255, 255, 255));
        fieldRankine.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldRankineKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(fieldRankine, gridBagConstraints);

        buttonBack.setBackground(new java.awt.Color(58, 49, 50));
        buttonBack.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        buttonBack.setForeground(new java.awt.Color(255, 255, 255));
        buttonBack.setText("Regresar");
        buttonBack.setBorderPainted(false);
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel1.add(buttonBack, gridBagConstraints);

        MenuBar.setBackground(new java.awt.Color(15, 69, 113));
        MenuBar.setBorder(null);
        MenuBar.setForeground(new java.awt.Color(204, 204, 204));
        MenuBar.setBorderPainted(false);

        FileMenu.setBackground(new java.awt.Color(58, 49, 50));
        FileMenu.setBorder(null);
        FileMenu.setForeground(new java.awt.Color(204, 204, 204));
        FileMenu.setText("Archivo");
        FileMenu.setBorderPainted(false);
        FileMenu.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        MainMenu.setBackground(new java.awt.Color(58, 49, 50));
        MainMenu.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        MainMenu.setForeground(new java.awt.Color(204, 204, 204));
        MainMenu.setText("Inicio");
        MainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainMenuActionPerformed(evt);
            }
        });
        FileMenu.add(MainMenu);

        CurrencyConverter.setBackground(new java.awt.Color(58, 49, 50));
        CurrencyConverter.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        CurrencyConverter.setForeground(new java.awt.Color(204, 204, 204));
        CurrencyConverter.setText("Conversor de Moneda");
        CurrencyConverter.setBorder(null);
        CurrencyConverter.setBorderPainted(false);
        CurrencyConverter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrencyConverterActionPerformed(evt);
            }
        });
        FileMenu.add(CurrencyConverter);

        TemperatureConverter.setBackground(new java.awt.Color(58, 49, 50));
        TemperatureConverter.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        TemperatureConverter.setForeground(new java.awt.Color(204, 204, 204));
        TemperatureConverter.setText("Conversor de Temperatura");
        TemperatureConverter.setBorder(null);
        TemperatureConverter.setBorderPainted(false);
        TemperatureConverter.setEnabled(false);
        FileMenu.add(TemperatureConverter);

        separator.setBackground(new java.awt.Color(0, 157, 221));
        FileMenu.add(separator);

        exitOption.setBackground(new java.awt.Color(58, 49, 50));
        exitOption.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        exitOption.setForeground(new java.awt.Color(204, 204, 204));
        exitOption.setText("Salir");
        exitOption.setBorder(null);
        exitOption.setBorderPainted(false);
        exitOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitOptionActionPerformed(evt);
            }
        });
        FileMenu.add(exitOption);

        MenuBar.add(FileMenu);

        HelpMenu.setBackground(new java.awt.Color(58, 49, 50));
        HelpMenu.setForeground(new java.awt.Color(204, 204, 204));
        HelpMenu.setText("Ayuda");
        HelpMenu.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        MenuBar.add(HelpMenu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CurrencyConverterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurrencyConverterActionPerformed
        CurrencyWindow currencyWindow = new CurrencyWindow();
        currencyWindow.setVisible(true);
        dispose();
    }//GEN-LAST:event_CurrencyConverterActionPerformed

    private void exitOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitOptionActionPerformed
        int option = JOptionPane.showOptionDialog(this, "¿Está seguro que desea cerrar el programa?", "Confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new String[]{"Sí", "No"}, "No");
        if (option == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitOptionActionPerformed

    private void MainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainMenuActionPerformed
        MainWindow mainWindow = new MainWindow();
        mainWindow.setVisible(true);
        dispose();
    }//GEN-LAST:event_MainMenuActionPerformed

    private void fieldCelsiusKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldCelsiusKeyReleased
        if (!fieldCelsius.getText().isEmpty()) {
            try {
                String celsiusInput = fieldCelsius.getText();

                // Verificar si ya hay un punto decimal en el número ingresado
                if (celsiusInput.indexOf(".") != celsiusInput.lastIndexOf(".")) {
                    // Si hay más de un punto decimal, eliminar el último
                    JOptionPane.showMessageDialog(this, "Solo se permite un separador decimal", "Error separador decimal", JOptionPane.ERROR_MESSAGE);
                    celsiusInput = celsiusInput.substring(0, celsiusInput.lastIndexOf("."));
                    fieldCelsius.setText(celsiusInput);
                }

                // Convertir el valor a un número
                double celsius = Double.parseDouble(fieldCelsius.getText());
                temperature.setCelsius(celsius);

                // Crear un objeto TemperatureConvert a partir de Celsius
                TemperatureConvert temperature = TemperatureConvert.fromCelsius(celsius);

                // Actualizar los valores en los otros textField
                fieldFahrenheit.setText(decimalFormat.format(temperature.getFahrenheit()));
                fieldKelvin.setText(decimalFormat.format(temperature.getKelvin()));
                fieldRankine.setText(decimalFormat.format(temperature.getRankine()));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Solo se permiten números", "Error", JOptionPane.ERROR_MESSAGE);
                fieldCelsius.setText("");
            }

        }
    }//GEN-LAST:event_fieldCelsiusKeyReleased

    private void fieldFahrenheitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldFahrenheitKeyReleased
        if (!fieldFahrenheit.getText().isEmpty()) {
            try {
                String fahrenheitInput = fieldFahrenheit.getText();

                // Verificar si ya hay un punto decimal en el número ingresado
                if (fahrenheitInput.indexOf(".") != fahrenheitInput.lastIndexOf(".")) {
                    // Si hay más de un punto decimal, eliminar el último
                    JOptionPane.showMessageDialog(this, "Solo se permite un separador decimal", "Error separador decimal", JOptionPane.ERROR_MESSAGE);
                    fahrenheitInput = fahrenheitInput.substring(0, fahrenheitInput.lastIndexOf("."));
                    fieldKelvin.setText(fahrenheitInput);
                }

                // Convertir el valor a un número
                double fahrenheit = Double.parseDouble(fieldFahrenheit.getText());
                temperature.setFahrenheit(fahrenheit);

                // Crear un objeto TemperatureConvert a partir de Celsius
                TemperatureConvert temperature = TemperatureConvert.fromFahrenheit(fahrenheit);

                // Actualizar los valores en los otros textField
                fieldCelsius.setText(decimalFormat.format(temperature.getCelsius()));
                fieldKelvin.setText(decimalFormat.format(temperature.getKelvin()));
                fieldRankine.setText(decimalFormat.format(temperature.getRankine()));

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Solo se permiten números", "Error", JOptionPane.ERROR_MESSAGE);
                fieldFahrenheit.setText("");
            }
        }
    }//GEN-LAST:event_fieldFahrenheitKeyReleased

    private void fieldKelvinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldKelvinKeyReleased
        if (!fieldKelvin.getText().isEmpty()) {
            try {
                String kelvinInput = fieldKelvin.getText();

                // Verificar si ya hay un punto decimal en el número ingresado
                if (kelvinInput.indexOf(".") != kelvinInput.lastIndexOf(".")) {
                    // Si hay más de un punto decimal, eliminar el último
                    JOptionPane.showMessageDialog(this, "Solo se permite un separador decimal", "Error separador decimal", JOptionPane.ERROR_MESSAGE);
                    kelvinInput = kelvinInput.substring(0, kelvinInput.lastIndexOf("."));
                    fieldKelvin.setText(kelvinInput);
                }

                // Convertir el valor a un número
                double kelvin = Double.parseDouble(fieldKelvin.getText());
                temperature.setKelvin(kelvin);

                // Crear un objeto TemperatureConvert a partir de Celsius
                TemperatureConvert temperature = TemperatureConvert.fromKelvin(kelvin);

                // Actualizar los valores en los otros textField
                fieldCelsius.setText(decimalFormat.format(temperature.getCelsius()));
                fieldFahrenheit.setText(decimalFormat.format(temperature.getFahrenheit()));
                fieldRankine.setText(decimalFormat.format(temperature.getRankine()));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Solo se permiten números", "Error", JOptionPane.ERROR_MESSAGE);
                fieldKelvin.setText("");
            }
        }
    }//GEN-LAST:event_fieldKelvinKeyReleased

    private void fieldRankineKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldRankineKeyReleased
        if (!fieldRankine.getText().isEmpty()) {
            try {
                String rankineInput = fieldRankine.getText();

                // Verificar si ya hay un punto decimal en el número ingresado
                if (rankineInput.indexOf(".") != rankineInput.lastIndexOf(".")) {
                    // Si hay más de un punto decimal, eliminar el último
                    JOptionPane.showMessageDialog(this, "Solo se permite un separador decimal", "Error separador decimal", JOptionPane.ERROR_MESSAGE);
                    rankineInput = rankineInput.substring(0, rankineInput.lastIndexOf("."));
                    fieldRankine.setText(rankineInput);
                }

                // Convertir el valor a un número
                double rankine = Double.parseDouble(fieldRankine.getText());
                temperature.setKelvin(rankine);

                // Crear un objeto TemperatureConvert a partir de Celsius
                TemperatureConvert temperature = TemperatureConvert.fromRankine(rankine);

                // Actualizar los valores en los otros textField
                fieldCelsius.setText(decimalFormat.format(temperature.getCelsius()));
                fieldFahrenheit.setText(decimalFormat.format(temperature.getFahrenheit()));
                fieldKelvin.setText(decimalFormat.format(temperature.getKelvin()));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Solo se permiten números", "Error", JOptionPane.ERROR_MESSAGE);
                fieldRankine.setText("");

            }
        }
    }//GEN-LAST:event_fieldRankineKeyReleased

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        int option = JOptionPane.showOptionDialog(this, "¿Desea regresar al inicio?", "Confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new String[]{"Sí", "No"}, "No");
        if (option == JOptionPane.YES_OPTION) {
            MainWindow mainWindow = new MainWindow();
            mainWindow.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_buttonBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TemperatureWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TemperatureWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TemperatureWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TemperatureWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TemperatureWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CurrencyConverter;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenu HelpMenu;
    private javax.swing.JMenuItem MainMenu;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenuItem TemperatureConverter;
    private javax.swing.JLabel TemperatureTitle;
    private javax.swing.JButton buttonBack;
    private javax.swing.JMenuItem exitOption;
    private javax.swing.JTextField fieldCelsius;
    private javax.swing.JTextField fieldFahrenheit;
    private javax.swing.JTextField fieldKelvin;
    private javax.swing.JTextField fieldRankine;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelCelsius;
    private javax.swing.JLabel labelFahrenheit;
    private javax.swing.JLabel labelKelvin;
    private javax.swing.JLabel labelRankine;
    private javax.swing.JPopupMenu.Separator separator;
    // End of variables declaration//GEN-END:variables
}
